Interim changes since jNDN v0.7 (2015-07-29)
--------------------------------------------

Changes
* In Face.registerPrefix, added the optional onRegisterSuccess callback.
* In integration_tests, added TestRegistrationCallbacks. (Thanks to Andrew Brown.)

Bug fixes
* http://redmine.named-data.net/issues/2846 Self-signed cert name needs a version component.
* http://redmine.named-data.net/issues/2847 Lower-case "ksk-" in generated key name.

Deprecated
* In Interest, deprecated get/setScope since it is for NDNx and NFD does not use it.

jNDN v0.7 (2015-05-28)
----------------------

Changes
* Added pom-android.xml and pom-without-protobuf.xml, and moved the related
  profiles out of pom.xml into these files. See INSTALL.md.
* In security, added KeyChain.createIdentityAndCertificate which returns the
  certificate name, instead of the deprecated createIdentity which returns the
  key name.

Deprecated
* Deprecated KeyChain.createIdentity. Use createIdentityAndCertificate which
  returns the certificate name instead of the key name.

jNDN v0.6 (2015-05-13)
----------------------

Changes
* http://redmine.named-data.net/issues/2624 By default, throw an exception when
  using the deprecated NDNx and binary XML wire format. To enable support while
  you upgrade your code to use NFD, in your main application set
  WireFormat.ENABLE_NDNX = true
* In MemoryContentCache, added support for storePendingInterest. add(data) will
  check if the added Data packet satisfies any pending interest. You can use
  getStorePendingInterest() for onDataNotFound in registerPrefix().
* In security, added AndroidSqlite3IdentityStorage to use on Android instead of
  BasicIdentityStorage so that it uses the Android SQLite services.
* examples: In repo_ng added BasicInsertion and WatchedInsertion to show
  interaction with the repo-ng repository.
* examples: Removed TestEncodeDecodeForwardingEntry and
  TestPublishAsyncNdnx because NDNx support is deprecated.
* Unit tests: In TestInterestMethods, added testExcludeMatches.

Deprecated
* Deprecated support for NDNx and binary XML. See WireFormat.ENABLE_NDNX above.

jNDN v0.5 (2015-04-15)
----------------------

Changes
* http://redmine.named-data.net/issues/1921 In Face, added getMaxNdnPacketSize().
  expressInterest and putData throw an exception if the encoded packet size exceeds it.
* http://redmine.named-data.net/issues/2566 In Face, added setInterestFilter. In
  registerPrefix, make the onInterest callback optional.
* http://redmine.named-data.net/issues/2579 Added callback type OnInterestCallback
  to use in registerPrefix and setInterestFilter instead of OnInterest. The new
  callback is passed the Face so that you can supply the Data with face.putData().
* Face: Changed the OnInterest callback to pass interestFilterId instead of registeredPrefixId.
  (You should use OnInterestCallback instead of the deprecated OnInterest.)
* MemoryContentCache: In registerPrefix, changed the onDataNotFound to OnInterestCallback.
  If your application uses onDataNotFound, you must update your callback function.
* In Interest setter methods, return this so that you can chain calls to update values.
* examples: Changed examples to use OnInterestCallback instead of OnInterest.

Deprecated
* In Face, deprecated registerPrefix where onInterest is type OnInterest. Use the
  registerPrefix where onInterest is OnInterestCallback so you can call face.putData().

Bug fixes
* http://redmine.named-data.net/issues/2758 ControlParameters with empty name not properly encoded.

jNDN v0.4 (2015-03-09)
----------------------

Changes
* http://redmine.named-data.net/issues/2532#change-8836 In Face.registerPrefix, if connected to a remote
  NFD then use localhop to do remote registration. (For remote registration, the remote NFD must be configured
  for localhop_security.) Added the optional method Face.isLocal() for the application to check if the
  connection is local. Thanks again to Andrew Brown!
* http://redmine.named-data.net/issues/2531 Handle an incoming NFD LocalControlHeader
  packet and return it in the packet getIncomingFaceId().
* http://redmine.named-data.net/issues/2545 In Blob and Name, added hashCode().
* Added class util/SegmentFetcher, ported from ndn-cxx. Use it in examples TestListRib, etc.
* In MemoryIdentityStorage, implemented support to get/set the default identity/key, etc. Thanks to Andrew Brown.
* Examples: Added TestListFaces to query NFD the same as "nfd-status -f".
* Examples: Added TestListChannels to query NFD the same as "nfd-status -c".
* Unit tests: In TestNameComponents, etc. added testHashCode().
* Integration tests: Added TestLocalControlHeader.

Bug fixes
* http://redmine.named-data.net/issues/2619: Data.setName, etc. should copy the object.
* Blob: Fix bug for getImmutableArray() when the ByteBuffer is read only.

jNDN v0.3 (2015-02-18)
----------------------

Changes
* http://redmine.named-data.net/issues/2374 Changed from Ant to the Maven build system. Thanks to Andrew Brown!
* http://redmine.named-data.net/issues/2388 Moved example programs from "tests" to "examples".
* In KeyChain.createIdentity, added an optional KeyParams argument.
* Examples: Added TestListRib to query NFD the same as "nfd-status -r".
* Unit tests: Added test-der-encode-decode tests for CertificateExtension.
* Unit tests: Moved unit tests that depend on the file system to integration-tests.

jNDN v0.2 (2014-12-23)
----------------------

Changes
* Added build.xml for Ant. Updated INSTALL.md to use it.
* Added MemoryContentCache.
* Added ProtobufTlv.
* Added ChronoSync2013 and TestChronoChat.
* Added UdpTransport.
* Added Sha256WithEcdsaSignature. Support encoding/decoding it in interests and data packets.
* Added DigestSha256Signature. Support encoding/decoding it in interests and data packets.
* In KeyChain, added generateEcdsaKeyPair and generateEcdsaKeyPairAsDefault.
* In KeyChain, added signWithSha256.
* In Name, added wireEncode and wireDecode.
* Moved tests from src/net/named_data/jndn/tests to tests/src/net/named_data/jndn/tests.
* Added JUnit tests to tests/src/net/named_data/jndn/tests/unit_tests.
* Added samples/android/NDNPing. (Thanks to Euihyun Jung <jung@anyang.ac.kr> !)
* In MetaInfo, added get/setFinalBlockId (replaces the deprecated get/setFinalBlockID).
* In Name.Component toNumberWithMarker and fromNumberWithMarker, pass the marker as int, not byte.
* Security library: Implemented certificate encode/decode.
* In FilePrivateKeyStorage, implemented generateKeyPair, generateKey, and
  encrypt/decrypt (for symmetric). Now KeyChain.createIdentity works. Thanks to Andrew Brown!
* In ControlParameters, added support for Uri and Strategy. Allow the Name to be optional. Thanks to Andrew Brown!
* In the default WireFormat, implemented decodeControlParameters. Thanks again to Andrew Brown!
* Unit tests: Added TestFilePrivateKeyStorage. Thanks to Andrew Brown!
* Unit tests: Added TestDerEncodeDecode to test certificate encoding.
* Unit tests: In TestDataMethods, added VerifyEcdsa and VerifyDigestSha256.
* Unit tests: In test-interest-methods, added VerifyDigestSha256.

Deprecated
* In MetaInfo, deprecated get/setFinalBlockID. Use get/setFinalBlockId.

jNDN v0.1 (2014-08-28)
----------------------

This is the initial release with support for the NDN Common Client Libraries API.
